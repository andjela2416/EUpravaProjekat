version: '3.8'

services:

  healthcare_service:
    image: healthcare_service
    container_name: healthcare_service
    build:
      context: .
      dockerfile: ./healthcare-service/Dockerfile
    restart: always
    ports:
      - ${HEALTHCARE_SERVICE_PORT}:${HEALTHCARE_SERVICE_PORT}
    environment:
      HEALTHCARE_DB_HOST: ${HEALTHCARE_DB_HOST}
      HEALTHCARE_DB_PORT: ${HEALTHCARE_DB_PORT}
      HEALTHCARE_SERVICE_PORT: ${HEALTHCARE_SERVICE_PORT}
      HEALTHCARE_SERVICE_HOST: ${HEALTHCARE_SERVICE_HOST}
      FOOD_DB_HOST: ${FOOD_DB_HOST}
      FOOD_DB_PORT: ${FOOD_DB_PORT}
      FOOD_SERVICE_PORT: ${FOOD_SERVICE_PORT}
      FOOD_SERVICE_HOST: ${FOOD_SERVICE_HOST}
    depends_on:
      - healthcare_db
    networks:
      - network
    volumes:
      - logs_volume:/logs

  food_service:
    image: food_service
    container_name: food_service
    build:
      context: .
      dockerfile: ./food-service/Dockerfile
    restart: always
    ports:
      - ${FOOD_SERVICE_PORT}:${FOOD_SERVICE_PORT}
    environment:
      HEALTHCARE_DB_HOST: ${HEALTHCARE_DB_HOST}
      HEALTHCARE_DB_PORT: ${HEALTHCARE_DB_PORT}
      HEALTHCARE_SERVICE_PORT: ${HEALTHCARE_SERVICE_PORT}
      HEALTHCARE_SERVICE_HOST: ${HEALTHCARE_SERVICE_HOST}
      FOOD_DB_HOST: ${FOOD_DB_HOST}
      FOOD_DB_PORT: ${FOOD_DB_PORT}
      FOOD_SERVICE_PORT: ${FOOD_SERVICE_PORT}
      FOOD_SERVICE_HOST: ${FOOD_SERVICE_HOST}
    depends_on:
      - food_db
    networks:
      - network
    volumes:
      - logs_volume:/logs

  api_gateway:
    build:
      context: ./api_gateway/
      dockerfile: Dockerfile
    container_name: api_gateway
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    networks:
      - network

  healthcare_db:
    image: mongo
    container_name: healthcare_db
    restart: on-failure
    networks:
      - network

  food_db:
    image: mongo
    container_name: food_db
    restart: on-failure
    networks:
      - network

volumes:

  logs_volume:

networks:
  network:
    driver: bridge